name: Create Version Tag and Release

on:
  push:
    branches:
      - main  # Adjust this to your branch

jobs:
  create-tag-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from vencord-windows.sh
        id: get_version
        run: |
          VERSION=$(grep 'currentVersion=' vencord-windows.sh | cut -d '"' -f 2)
          echo "Extracted version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Get previous version
        id: get_prev_version
        run: |
          PREV_VERSION=$(git tag --sort=-v:refname | head -n 1 | sed 's/^v//')
          echo "Previous version: $PREV_VERSION"
          echo "PREV_VERSION=$PREV_VERSION" >> $GITHUB_ENV

      - name: Check if version has changed
        id: version_check
        run: |
          if [ "$VERSION" = "$PREV_VERSION" ]; then
            echo "Version has not changed."
            echo "version_changed=false" >> $GITHUB_OUTPUT
          else
            echo "Version has changed."
            echo "version_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        if: steps.version_check.outputs.version_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Create and Push Tag
        if: steps.version_check.outputs.version_changed == 'true'
        run: |
          TAG="v${VERSION}"
          git tag $TAG
          git push origin $TAG

      - name: Create Release and Upload Assets
        if: steps.version_check.outputs.version_changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            vencord-windows.sh
            vencord-linux.sh
            windows-setup.bat
          tag_name: "v${{ env.VERSION }}"
          name: "Vencord Installer v${{ env.VERSION }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}